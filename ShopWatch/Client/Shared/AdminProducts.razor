@inject IProductService ProductService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@inject IToastService ToastService
@implements IDisposable
@attribute [Authorize(Roles = "Administrator")]

@if (ProductService.Products != null)
{
    <section class="shoping-cart spad">
        <div class="container-fluid">
            <div class="row">
                <div class="col-12 mt-5">
                    <div class="checkout__form">
                        <h4>Product</h4>
                    </div>
                </div>
                <div class="col-12 d-flex justify-content-end pb-5 pt-3">
                    <a href="/admin/product/add" class="btn btn-success font-weight-bold">Thêm sản phẩm</a>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-12">
                    <table class="table table-hover">
                        <thead>
                            <tr class="table-success">
                                <th scope="col">#</th>
                                <th scope="col">Title</th>
                                <th scope="col">Edition</th>
                                <th scope="col">Price</th>
                                <th scope="col">Action</th>
                            </tr>
                        </thead>
                        <tbody>

                            @foreach (var item in ProductService.Products)
                            {
                                <tr>
                                    <th scope="row">@item.Id</th>
                                    <td>@item.Title</td>
                                    <td>
                                        @if (item.Variants.Count > 0)
                                        {
                                            foreach (var vari in GetPrice(item))
                                            {
                                                @((MarkupString)($"<div>{vari.Edition.Name}</div>"))
                                            }
                                        }
                                    </td>
                                    <td>
                                        @if (item.Variants.Count > 0)
                                        {
                                            foreach (var vari in GetPrice(item))
                                            {
                                                @((MarkupString)($"<div>{vari.Price}</div>"))
                                            }
                                        }
                                    </td>
                                    <td class="d-flex">
                                        <a href="/admin/product/@item.Id" class="btn btn-primary mr-2">Sửa</a>
                                        <button class="btn btn-danger ml-2" @onclick="()=>DeleteProduct(item)">Xoá</button>
                                    </td>
                                </tr>
                            }

                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </section>
}
@code {

    private List<ProductVariant> GetPrice(Product product)
    {
        var variant = product.Variants.ToList();
        return variant;
    }


    protected override async Task OnInitializedAsync()
    {
        ProductService.Onchange += StateHasChanged;
        await ProductService.LoadProducts();
    }
    public void Dispose()
    {
        ProductService.Onchange -= StateHasChanged;
    }
    private async void DeleteProduct(Product product)
    {
        bool confirm = await JSRuntime.InvokeAsync<bool>("confirm", $"Bạn chắc chắn xóa {product.Title}");
        if (confirm)
        {
            var result = await ProductService.DeleteProduct(product.Id);
            if (result.Data)
            {
                await ProductService.LoadProducts();
                ToastService.ShowSuccess(result.Message);
            }
            else
            {
                ToastService.ShowError("Delete product is error");
            }
        }
    }
}