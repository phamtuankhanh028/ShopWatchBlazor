@inject IProductService ProductService
@implements IDisposable

<section class="product spad">
    <div class="container">
        <div class="row">
            <div class="col-lg-12 col-md-12">
                <div class="row">


                    @foreach (var product in ProductService.Products)
                    {
                        <div class="col-lg-4 col-md-6 col-sm-6">
                            <div class="product__item">
                                <div class="product__item__pic set-bg" style="background-image: url(@product.Image)">
                                    <ul class="product__item__pic__hover">
                                        <li><a href="/product/@product.Id"><i class="fa fa-shopping-cart"></i></a></li>
                                    </ul>
                                </div>
                                <div class="product__discount__item__text">
                              
                                    <h5><a href="/product/@product.Id">@product.Title</a></h5>
                                    <div class="product__item__price">@GetPriceText(product)
                                    </div>
                                </div>
                            </div>
                        </div>
                    }

                </div>
            </div>
        </div>
    </div>
</section>

@code {
    //[Parameter]
    //public int? CategoryId { get; set; } = null;

    protected override void OnInitialized()
    {
        // await ProductService.LoadProducts();
        ProductService.Onchange += StateHasChanged;
    }

    public void Dispose()
    {
        ProductService.Onchange -= StateHasChanged;
    }

    private string GetPriceText(Product product)
    {
        var variants = product.Variants;
        if(variants.Count == 0)
        {
            return string.Empty;
        }else if(variants.Count ==1)
        {
            return $"{variants[0].Price :C0}";
        }
        decimal minPrice = variants.Min(v => v.Price);
        return $"Giá từ {minPrice :C0}";
    }
}
